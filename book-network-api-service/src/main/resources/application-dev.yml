# DataSource Configuration for PostgreSQL Database
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/book_social_network  # Database URL for PostgreSQL. 'localhost' is the host and '5432' is the default PostgreSQL port.
    username: username  # Database username. Replace with your actual database username.
    password: password  # Database password. Replace with your actual database password.
    driver-class-name: org.postgresql.Driver  # The JDBC driver class name for PostgreSQL.

  # JPA (Java Persistence API) Configuration
  jpa:
    hibernate:
      ddl-auto: update  # Hibernate will automatically update the database schema on startup. Options: 'none', 'update', 'create', 'create-drop'.
    show-sql: false  # Controls whether SQL queries generated by Hibernate are logged to the console. Set to 'true' to enable SQL logging.
    properties:
      hibernate:
        format_sql: true  # Ensures that the SQL queries logged by Hibernate are formatted for readability.
    database: postgresql  # Specifies that PostgreSQL is the database being used.
    database-platform: org.hibernate.dialect.PostgreSQLDialect  # Tells Hibernate which dialect to use for PostgreSQL.

  # Email (SMTP) Configuration
  mail:
    host: localhost  # The SMTP server host for sending emails. 'localhost' typically means using a local SMTP server for testing.
    port: 1025  # The port for the SMTP server. 1025 is commonly used for local testing (e.g., MailHog or FakeSMTP).
    username: fahim  # The username for SMTP authentication. Replace with the actual username.
    password: fahim  # The password for SMTP authentication. Replace with the actual password.
    properties:
      mail:
        smtp:
          trust: "*"  # Trust all SMTP servers (use with caution, generally for testing environments).
        auth: true  # Enable SMTP authentication.
        starttls:
          enabled: true  # Enable STARTTLS to ensure the connection is secured via encryption.
        connectiontimeout: 5000  # Timeout for establishing a connection to the SMTP server (in milliseconds).
        timeout: 3000  # Timeout for reading from the SMTP server (in milliseconds).
        writetimeout: 5000  # Timeout for writing to the SMTP server (in milliseconds).

# Application-level configuration
application:
  security:
    jwt:
      secret-key: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
      expiration: 86400000  # JWT expiration time (in milliseconds). Here it's set to 1 day (24 hours).
      refresh-token:
        expiration: 604800000  # Refresh token expiration time (in milliseconds). Set to 7 days.

  # Mailing URLs
  mailing:
    frontend:
      activation-url: http://localhost:4200/activate-account  # The URL for activating an account from the frontend (e.g., a link sent in the activation email).

  # File Upload Configuration
  file:
    uploads:
      photos-output-path: ./uploads  # Directory path where uploaded files (photos) will be stored. './uploads' means files will be stored in a local 'uploads' folder.

# Server Configuration
server:
  port: 8088  # The port number the Spring Boot application will run on. Set to 8088 in this configuration.
